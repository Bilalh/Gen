language Essence 1.3

given n_courses: int(1..100)

letting Course be domain int(1..n_courses)
given prereq : relation of (Course * Course)

where
forAll (i,j) in prereq .     $ i is directly connected to j
                             $ there cannot be a path from j to i
   !(
    $ an immediate connection from j to i
    ((j,i) in prereq)

    \/

    $ a path where number of nodes is between 1 and (n-2)
    (exists path : sequence (minSize 1, maxSize n_courses-2, injective) of Course .

        $ j is connected to the first node in `path`
           (j, path(1)) in prereq

        $ the last node in `path` is connected to i
        /\ (path(|path|), i) in prereq

        $ and adjacent nodes in `path` are connected
        /\ and([ (path(x), path(x+1)) in prereq | x : int(1..|path|-1)]))
    )

find b : int(0)
