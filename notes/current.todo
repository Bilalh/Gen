
domains:
	✔  functions @done (14-02-23 18:35)
		✔ Generate total function @done (14-01-21)
		✔ Dependencies such as forall as in PPP @done (14-02-23 18:35)
			-  Easy way would be generate and test (using conjure's full evaluator)
			-  could take a long time
			-
			-  Keep a domain for each mapping, which is reduced when choosing other values
			-  e.g when picking capacity change the domain of crew

			☐ make generic


Where:
	How to  repr them,  could use essence `where` statements

 ☐ What to do when a constaint empties a domain,
 	  - either keep on picking
 	  - start next iteration.

	simple:
		☐ prob006-GR				n >= 0
		☐ prob023-MagicHex  d % 2 = 1
		☐ prob026-round-r   n_teams % 2 = 0
		☐ prob028-Bibd      v = b   r = k
		☐ prob045-cover			 k>=t, b>=g**t
	not simple:
		☐ prob009-PerSqu		(sum s : sizes . s**2) = container_size**2
		☐ 123 128 131       complex where with Quantifiers, functions and other Expressions
			                   But are commented out


Results:


Algorithms:
 ✔ Handle FailedToGenerateParamExeception and  NoValuesInDomainException. @done (14-02-05 18:52)
 	 start in .\nsampling.py>do_iteration

 ☐ Make the genrated function partial for use with minino


Misc:
	✔  Use the new EprimeOrdering view to choose which order the eprimes should be done in. @done (14-01-28 21:01)
		☐  Improve SQL to use join rather then subqueries

	✔  Fix timeout (need to divide by total number of models) .\chain_lib.py>get_results @done (14-01-27 16:49)
	☐  Make .\tar_results.sh:51  work when $NUM_JOBS=1


Maybe:
	☐ use a newer version of sqlite (3.7.13) on ferry since that what python and my mac uses and make interactive use e.g check results while it running 10x faster in some

MinionParams:

Using minion to genrate assigments.

	✔ Convert the where to constraints @done (14-02-04 05:10)
	✔ Convert the givens to finds @done (14-02-04 05:10)
	✔ use random ordering  in minion to genrate a asignment @done (14-02-04 05:10)
	✔ Setup scripts timings etc @done (14-02-04 05:18)
	✔ Use this method @done (14-02-04 05:35)
	☐ Make markov chain point that are close by calcuation

Paramisse  the problem so it only needs to be refined once by --compact

compare with my methods


not as simple because the dependency on the find then

	ERROR: In statement : find capacity_Function1D: matrix indexed by [int(1..n_boats)] of int(1..n_upper)
	ERROR: Right-hand side contains an identifier that is not a constant or parameter.

Idea  do ints first then funcs

