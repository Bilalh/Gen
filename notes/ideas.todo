type strengthening:
if we have

  given n : int(1..100)
  given weights : function (size n) int(1..n) --> int(1..100)

we can infer that the function is total


sonet:
  try to get relation int matrix  eprime form essence,   idea from the domainion model


model selection:

  Idea is to figure out which rules to apply, and try to get a better set of models then compact

  Start off with by running compact C, and R random models.

  Use my instance-gen method to find some params which should be quite quick  since R <<<  total_number_modesl

 B =  all of the models from R that performs better then C on the parms

 foreach model b in B
   try uses the rules that produced b    +   genrate S random models

 repeat util some timeout T is done

 fracturing:
   if we detact fracturing then if then group the rules which worked well for each fracture