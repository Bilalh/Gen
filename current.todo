
domains:
	✔ Make hs program to output json for givens @done
	✔ ints @done
	✔  References @done
	✔  all values for ints @done (14-01-21)
	☐  return a wrapper (named tuple?) for random_point (since we are not just using int any more),
		   iincluding; (make sure to sort dict before creating it)
		 - pretty printed form (could also be a method) but can't use named tuple then
		 -	the val

	☐  radius calculation  say r=10 e.g for PPP, how should these be compared?
		   [84, 93, 68, {1: 73, 2: 47}, {1: 48, 2: 28}]
		   [73, 96, 38, {1: 1, 2: 71, 3:12}, {1: 58, 2: 9, 3:42}]
		-  how to compare the functions (assuming total):
			✔ as extra dims.
			✘ compare dom and range as pairs
		- for `missing` mapping  treat the distance between the two parts  as zero

	☐  functions
		✔ Generate total function @done (14-01-21)


Algorithms:
	method.py:
		✔ Update .\method.py>random_point to use new classes @done
		✔ Update .\method.py>run_param_and_store_quality to use new classes @done


Dependencies:
	How to  repr them,  could use essence `where` statements

	PPP:
		✔ Variable references @done
		☐ the size of the crew is less then it's capacity
			for i in Boat .
				crew(i) <= capacity(i)


Misc:
	✔  Show cpu time at the end @done (14-01-21 00:28)
	☐  Ordering option parsing
	☐  tar stats files to reduce the number of files


